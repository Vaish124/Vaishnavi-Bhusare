{% comment %}
  Figma Grid (from scratch)
  - Six product blocks with "pins" that open a custom modal
  - Variants rendered dynamically
  - Add-to-cart via AJAX fetch
  - Optional "auto add" product when conditions match
{% endcomment %}

<section id="gg-grid" class="gg-wrap" 
  data-trigger-color="{{ section.settings.trigger_color | escape }}"
  data-trigger-size="{{ section.settings.trigger_size | escape }}">
  <h2 class="gg-grid__title">{{ section.settings.grid_title }}</h2>

  <div class="gg-grid">
    {% for block in section.blocks %}
      {% assign p = block.settings.product %}
      {% if p %}
        <article class="gg-card" {{ block.shopify_attributes }}>
          {% if p.featured_media %}
            <img src="{{ p.featured_media | image_url: width: 400 }}" alt="{{ p.title | escape }}" class="gg-card__img" loading="lazy">
          {% endif %}
          <button class="gg-pin" aria-label="Show {{ p.title | escape }} details" data-product-handle="{{ p.handle }}">ï¼‹</button>

          {%- comment -%} Embed product JSON for JS (stable & fast) {%- endcomment -%}
          <script type="application/json" id="prod-{{ block.id }}">{{ p | json }}</script>
        </article>
      {% else %}
        <article class="gg-card gg-card--placeholder" {{ block.shopify_attributes }}>
          <div class="gg-card__ph">Select a product</div>
        </article>
      {% endif %}
    {% endfor %}
  </div>

  <!-- Modal HTML -->
  <div id="gg-modal" class="gg-modal" style="display: none;">
    <div class="gg-modal__overlay">
      <div class="gg-modal__content">
        <button class="gg-modal__close" aria-label="Close">&times;</button>
        <div class="gg-modal__body">
          <div class="gg-modal__image">
            <img id="gg-modal-img" src="" alt="">
          </div>
          <div class="gg-modal__details">
            <h3 id="gg-modal-title"></h3>
            <p id="gg-modal-price"></p>
            <div id="gg-modal-description"></div>
            <div id="gg-modal-variants"></div>
            <button id="gg-modal-add-cart" class="gg-add-to-cart">Add to Cart</button>
          </div>
        </div>
      </div>
    </div>
  </div>

  {%- if section.settings.auto_add_product != blank -%}
    <script type="application/json" id="gg-auto-product">{{ section.settings.auto_add_product | json }}</script>
  {%- endif -%}

  <!-- JavaScript -->
  <script>
  document.addEventListener('DOMContentLoaded', function() {
    console.log('Gift Guide Grid loaded');
    
    const pins = document.querySelectorAll('.gg-pin');
    const modal = document.getElementById('gg-modal');
    
    console.log('Found pins:', pins.length);
    
    pins.forEach((pin, index) => {
      pin.addEventListener('click', function(e) {
        e.preventDefault();
        console.log('Pin clicked:', index);
        
        const productHandle = this.getAttribute('data-product-handle');
        console.log('Product handle:', productHandle);
        
        // Fetch product data from Shopify
        fetch(`/products/${productHandle}.js`)
          .then(response => response.json())
          .then(product => {
            console.log('Product data:', product);
            
            // Populate modal with product data
            document.getElementById('gg-modal-title').textContent = product.title;
            document.getElementById('gg-modal-price').textContent = '$' + (product.price / 100).toFixed(2) + ' CAD';
            document.getElementById('gg-modal-description').innerHTML = product.description;
            
            if (product.featured_image) {
              document.getElementById('gg-modal-img').src = product.featured_image;
              document.getElementById('gg-modal-img').alt = product.title;
            }
            
           // Show variants - Updated to match 1st screenshot format
let variantsHtml = '';
if (product.variants && product.variants.length > 1) {
  // Get unique colors and sizes
  const colors = [...new Set(product.variants.map(v => v.option1))];
  const sizes = [...new Set(product.variants.map(v => v.option2))];
  
  variantsHtml = '<div class="variants-section">';
  
  // Color dropdown
  if (colors.length > 1) {
    variantsHtml += '<div class="variant-option">';
    variantsHtml += '<label for="color-select">Color:</label>';
    variantsHtml += '<select id="color-select" class="variant-select">';
    colors.forEach(color => {
      variantsHtml += `<option value="${color}">${color}</option>`;
    });
    variantsHtml += '</select>';
    variantsHtml += '</div>';
  }
  
  // Size dropdown
  if (sizes.length > 1) {
    variantsHtml += '<div class="variant-option">';
    variantsHtml += '<label for="size-select">Size:</label>';
    variantsHtml += '<select id="size-select" class="variant-select">';
    sizes.forEach(size => {
      variantsHtml += `<option value="${size}">${size}</option>`;
    });
    variantsHtml += '</select>';
    variantsHtml += '</div>';
  }
  
  variantsHtml += '</div>';
}
document.getElementById('gg-modal-variants').innerHTML = variantsHtml;

            
            // Show modal
            modal.style.display = 'block';
            console.log('Modal should be visible now');
          })
          .catch(error => {
            console.error('Error fetching product:', error);
          });
      });
    });
    
    // Close modal
    const closeBtn = document.querySelector('.gg-modal__close');
    if (closeBtn) {
      closeBtn.addEventListener('click', function() {
        modal.style.display = 'none';
      });
    }
    
    // Close modal when clicking outside
    modal.addEventListener('click', function(e) {
      if (e.target === modal) {
        modal.style.display = 'none';
      }
    });
  });
  </script>
</section>

{% schema %}
{
  "name": "Gift Guide Grid",
  "settings": [
    { "type": "text", "id": "grid_title", "label": "Grid title", "default": "Tisso vison in the wild" },
    { "type": "text", "id": "trigger_color", "label": "Auto-add trigger color value", "default": "Black" },
    { "type": "text", "id": "trigger_size", "label": "Auto-add trigger size value", "default": "Medium" },
    { "type": "product", "id": "auto_add_product", "label": "Product to auto-add when the trigger variant is added", "info": "Optional. Example: Soft Winter Jacket" }
  ],
  "blocks": [
    {
      "type": "product",
      "name": "Product",
      "limit": 6,
      "settings": [
        { "type": "product", "id": "product", "label": "Product" }
      ]
    }
  ],
  "max_blocks": 6,
  "presets": [{ "name": "Gift Guide Grid", "blocks": [{ "type": "product" },{ "type": "product" },{ "type": "product" },{ "type": "product" },{ "type": "product" },{ "type": "product" }] }]
}
{% endschema %}
